{"filter":false,"title":"Immediate (Javascript (browser))","tooltip":"Immediate (Javascript (browser))","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Welcome to the Javascript REPL. This REPL allows you to test any single or multi line code in","a browser based javascript environment (iframe). It operates similar to your browser console.",""],"id":956}]]},"immediate":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":2,"column":0},"end":{"row":2,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0,"type":"jsbrowser","history":["1 += 1","var map = new Array(20);\nfor (var i = 0; i < map.length; i++) {\n    map[i] = new Array(10);\n    for (var j = 0; j < map[i].length; j++) {\n        map[i][j] = '';\n    }\n}\nmap[7][15] = \"blue\"\nfunction height(){\n    for (var i = 0; i < 20; i++) {\n        for (var j = 0; j < 10; j++) {\n            if (map[i][j] !== ''){\n                return j\n            }\n        }\n    }\n}\nconsole.log(height())","var map = new Array(20);\nfor (var i = 0; i < map.length; i++) {\n    map[i] = new Array(10);\n    for (var j = 0; j < map[i].length; j++) {\n        map[i][j] = '';\n    }\n}\nmap[11][5] = \"blue\"\nfunction height(){\n    for (var i = 0; i < map.length; i++) {\n        for (var j = 0; j < map[i].length; j++) {\n            if (map[i][j] !== ''){\n                return j\n            }\n        }\n    }\n}\nconsole.log(height())","var map = new Array(20);\nfor (var i = 0; i < map.length; i++) {\n    map[i] = new Array(10);\n    for (var j = 0; j < map[i].length; j++) {\n        map[i][j] = '';\n    }\n}\nmap[5][11] = \"blue\"\nfunction height(){\n    for (var i = 0; i < map.length; i++) {\n        for (var j = 0; j < map[i].length; j++) {\n            if (map[i][j] !== ''){\n                return j\n            }\n        }\n    }\n}\nconsole.log(height())","var map = new Array(20);\nfor (var i = 0; i < map.length; i++) {\n    map[i] = new Array(10);\n    for (var j = 0; j < map[i].length; j++) {\n        map[i][j] = '';\n    }\n}\nmap[5][7] = \"blue\"\nfunction height(){\n    for (var i = 0; i < map.length; i++) {\n        for (var j = 0; j < map[i].length; j++) {\n            if (map[i][j] !== ''){\n                return j\n            }\n        }\n    }\n}\nconsole.log(height())","var map = new Array(20);\nfor (var i = 0; i < map.length; i++) {\n    map[i] = new Array(10);\n    for (var j = 0; j < map[i].length; j++) {\n        map[i][j] = '';\n    }\n}function height(){\n    for (var i = 0; i < 10; i++) {\n        for (var j = 0; j < 20; j++) {\n            if (map[i][j] !== '' and map[i][j] !== undefined){\n                return j\n            }\n        }\n    }\n}\nheight()","var map = new Array(20);\nfor (var i = 0; i < map.length; i++) {\n    map[i] = new Array(10);\n    for (var j = 0; j < map[i].length; j++) {\n        map[i][j] = '';\n    }\n}function height(){\n    for (var i = 0; i < 10; i++) {\n        for (var j = 0; j < 20; j++) {\n            if (map[i][j] !== '' and map[i][j] != undefined){\n                return j\n            }\n        }\n    }\n}\nheight()","height()","var map = new Array(20);\nfor (var i = 0; i < map.length; i++) {\n    map[i] = new Array(10);\n    for (var j = 0; j < map[i].length; j++) {\n        map[i][j] = '';\n    }\n}function height(){\n    for (var i = 0; i < 10; i++) {\n        for (var j = 0; j < 20; j++) {\n            if (map[i][j] !== ''){\n                return j\n            }\n        }\n    }\n}","    for (var i = 0; i < 10; i++) {\n        for (var j = 0; j < 20; j++) {\n            if (map[i][j] !== '' or map[i][j] !== undefined){\n                console.log(i+','+j+map[i][j])\n            }\n        }\n    }","    for (var i = 0; i < 10; i++) {\n        for (var j = 0; j < 20; j++) {\n            if (map[i][j] !== '' or map[i][j !== undefined){\n                console.log(i+','+j+map[i][j])\n            }\n        }\n    }","    for (var i = 0; i < 10; i++) {\n        for (var j = 0; j < 20; j++) {\n            if (map[i][j] !== ''){\n                console.log(i+','+j+map[i][j])\n            }\n        }\n    }","    for (var i = 0; i < 10; i++) {\n        for (var j = 0; j < 20; j++) {\n            if (map[i][j] !== ''){\n        }\n    }","    for (var i = 0; i < 10; i++) {\n        for (var j = 0; j < 20; j++) {\n            console.log(i+','+j+map[i][j])\n        }\n    }","map[6][14] = \"blue\"","var map = new Array(20);\nfor (var i = 0; i < map.length; i++) {\n    map[i] = new Array(10);\n    for (var j = 0; j < map[i].length; j++) {\n        map[i][j] = '';\n    }\n}","    for (var i = 0; i < 10; i++) {\n        for (var j = 0; j < 20; j++) {\n            console.log(i+','+j)\n        }\n    }","    for (var i = 0; i < 10; i++) {\n        for (var j = 0; j < 20; j++) {\n            console.log(i','j)\n        }\n    }","height()","for (var i = 0; i < 10; i++) {\n        for (var j = 0; j < 20; j++) {\n            console.log(i+','+j+map[i][j])\n        }\n}","for (var i = 0; i < 10; i++) {\n        for (var j = 0; j < 20; j++) {\n        }\n}","map[3][7] = \"asdf\"","function height(){\n    for (var i = 0; i < 10; i++) {\n        for (var j = 0; j < 20; j++) {\n            if (map[i][j] !== ''){\n                return j\n            }\n        }\n    }\n}","var map = new Array(20);\nfor (var i = 0; i < map.length; i++) {\n    map[i] = new Array(10);\n    for (var j = 0; j < map[i].length; j++) {\n        map[i][j] = '';\n    }\n}","for (var i = 0; i < 10; i++) {\n    for (var j = 0; j < 20; j++) {\n        console.log(i + ',' + j + map[i][j])\n    }\n}","for (var i = 0; i < 10; i++) {\n        for (var j = 0; j < 20; j++) {\n            console.log(i + j + map[i][j])\n        }\n    }","for (var i = 0; i < 10; i++) {\n        for (var j = 0; j < 20; j++) {\n            console.log(i + j + map[i][j])\n            }\n        }\n    }","height()","map[4][12] = \"blue\"","height()","map[4][7] = \"blue\"","var map = new Array(20);\nfor (var i = 0; i < map.length; i++) {\n    map[i] = new Array(10);\n    for (var j = 0; j < map[i].length; j++) {\n        map[i][j] = '';\n    }\n}function height(){\n    for (var i = 0; i < 10; i++) {\n        for (var j = 0; j < 20; j++) {\n            if (map[i][j] !== ''){\n                return j\n            }\n        }\n    }\n}","var map = new Array(20);\nfor (var i = 0; i < map.length; i++) {\n    map[i] = new Array(10);\n    for (var j = 0; j < map[i].length; j++) {\n        map[i][j] = '';\n    }\n}function height(){\n    for (var i = 0; i < 10; i++) {\n        for (var j = 0; j < 20; j++) {\n            if (map[i][j] !== ''){\n                return j\n            }\n        }\n    }\n}\n","var map = new Array(20);\nfor (var i = 0; i < map.length; i++) {\n    map[i] = new Array(10);\n    for (var j = 0; j < map[i].length; j++) {\n        map[i][j] = '';\n    }\n}\n\nmap[5][10] = \"blue\"\n\nfunction height(){\n    for (var x = 0; x >= 10; x++){\n        for (var y = 0; y >= 20; y++){\n            if (map[x][y] !== ''){\n                return y\n            }\n        }\n    }\n}\n\nheight()\n","height()","var map = new Array(20);\nfor (var i = 0; i < map.length; i++) {\n    map[i] = new Array(10);\n    for (var j = 0; j < map[i].length; j++) {\n        map[i][j] = '';\n    }\n}\n\nmap[5][10] = \"blue\"\n\nfunction height(){\n    for (var x = 0; x >= 10; x++){\n        for (var y = 0; y >= 20; y++){\n            if (map[x][y] !== ''){\n                return y\n            }\n        }\n    }\n}","height()\n","function height(){\n    for (var x = 0; x >= 10; x++){\n        for (var y = 0; y >= 20; y++){\n            if (map[x][y] !== ''){\n                return y\n            }\n        }\n    }\n}","map[5][10] = \"blue\"","\nvar map = new Array(20);\nfor (var i = 0; i < map.length; i++) {\n    map[i] = new Array(10);\n    for (var j = 0; j < map[i].length; j++) {\n        map[i][j] = '';\n    }\n}","function height(){\n    for (var x = 0; x >= 10; x++){\n        for (var y = 0; y >= 20; y++){\n            if (map[x][y] !== ''){\n                return y\n            }\n        }\n    }\n}","map[5][7] = \"blue\"","var map = new Array(20);\nfor (var i = 0; i < map.length; i++) {\n    map[i] = new Array(10);\n    for (var j = 0; j < map[i].length; j++) {\n        map[i][j] = '';\n    }\n}","var map[2][5] = \"blue\"","function draw() {\n    for (let x in map) {\n        for (let y in map[x]) {\n            if (map[x][y] != ''){\n                console.log(map[x][y])\n            }\n        }\n    }\n}\ndraw()","var map = [[[''],[''],[''],[''],[''],[''],['']],\n          [[''],[''],[''],[''],[''],[''],['']],\n          [[''],[''],[''],[''],[''],[''],['']],\n          [[''],[''],[''],[''],[''],[''],['']],\n          [[''],[''],[''],[''],[''],[''],['']],\n          [[''],[''],[''],[''],[''],[''],['']],\n          [[''],[''],[''],[''],[''],[''],['']],\n          [[''],[''],[''],[''],[''],[''],['']],\n          [[''],[''],[''],[''],[''],[''],['']],\n          [[''],[''],[''],[''],[''],[''],['']]]\nmap[5][5] = 'red'","var map = [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]\nmap[5][5] = 'red'","function draw() {\n    for (let x in map) {\n        for (let y in map[x]) {\n            if (map[x][y] != ''){\n                console.log(map[x][y])\n            }\n        }\n    }\n}\ndraw()","var map = [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],['red'],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]","var map = [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],['red'],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]\n          [[''],[''],[''],[''],[''],[''],['']]\n          \nfunction draw() {\n    for (let x in map) {\n        for (let y in map[x]) {\n            if (map[x][y] != ''){\n                console.log(map[x][y])\n            }\n        }\n    }\n}\ndraw()","var map = new Array(10);\n    for (var i = 0; i < 10; i++) {\n        map[i] = new Array(20);\n}\nmap[0][0] == true\nfunction draw() {\n    for (var x in map) {\n        for (var y in map[x]) {\n            if (map[x][y]){\n                console.log(\"asdgadsf\")\n            }\n        }\n    }\n}","var map = new Array(10);\n    for (var i = 0; i < 10; i++) {\n        map[i] = new Array(20);\n}\nmap[0][0] == true\nfunction draw() {\n    for (x in map) {\n        for (y in map[x]) {\n            if (map[x][y]){\n                console.log(\"asdgadsf\")\n            }\n        }\n    }\n}","var map = new Array(10);\n    for (var i = 0; i < 10; i++) {\n        map[i] = new Array(20);\n}\nmap[5][5] == true\nfunction draw() {\n    for (x in map) {\n        for (y in map[x]) {\n            if (map[x][y]){\n                console.log(\"asdgadsf\")\n            }\n        }\n    }\n}","var map = new Array(10);\n    for (var i = 0; i < 10; i++) {\n        map[i] = new Array(20);\n}\nmap[5][5] == true\nfunction draw() {\n    for (let x in map) {\n        for (let y in map[x]) {\n            if (map[x][y]){\n                console.log(\"asdgadsf\")\n            }\n        }\n    }\n}","var map = new Array(10);\n    for (var i = 0; i < 10; i++) {\n        map[i] = new Array(20);\n}\nmap[5][5] == true\nfunction draw() {\n    for (let x in map) {\n        for (let y in map[x]) {\n            if (map[x][y] != \"\"){\n                console.log(\"asdgadsf\")\n            }\n        }\n    }\n}\ndraw()","var map = new Array(10);\n    for (var i = 0; i < 10; i++) {\n        map[i] = new Array(20);\n}\nmap[5][5] == true\nfunction draw() {\n    for (let x in map) {\n        for (let y in map[x]) {\n            if (map[x][y] == true){\n                console.log(\"asdgadsf\")\n            }\n        }\n    }\n}\ndraw()","map[5][5] == true\nfunction draw() {\n    for (let x of map) {\n        for (let y of map[x]) {\n            if (map[x][y] == true){\n                console.log(asdgadsf)\n            }\n        }\n    }\n}\ndraw()","var map = new Array(10);\n    for (var i = 0; i < 10; i++) {\n        map[i] = new Array(20);\n}","map[5][5] == true\nfunction draw() {\n    for (let x of map) {\n        for (let y of map[x]) {\n            if (map[x][y] == true){\n                console.log(asdgadsf)\n            }\n        }\n    }\n}\ndraw()","map[5][5] == true\nfunction draw() {\n    for (let x of map) {\n        for (let y of map[x]) {\n            if (map[x][y] == true){\n                console.log(asdgadsf)\n                ctx.beginPath();\n                ctx.rect(x, y, 20, 20);\n                ctx.fillStyle = \"red\";\n                ctx.fill();\n            }\n        }\n    }\n}\ndraw()","class Tetrimino {\n    constructor(){\n        switch (random_tetrimino()) {\n            case \"I\":\n                this.a = {x: 3,y: 0},this.b = {x: 4,y: 0},this.c = {x: 5,y: 0},this.d = {x: 6,y: 0};\n                this.colour = \"cyan\";\n                break;\n            case \"J\":\n                this.a = {x: 4,y: 0},this.b = {x: 5,y: 0},this.c = {x: 6,y: 0},this.d = {x: 6,y: 1};\n                this.colour = \"blue\";\n                break;\n            case \"L\":\n                this.a = {x: 3,y: 0},this.b = {x: 4,y: 0},this.c = {x: 5,y: 0},this.d = {x: 1,y: 3};\n                this.colour = \"orange\";\n                break;\n            case \"O\":\n                this.a = {x: 4,y: 0},this.b = {x: 5,y: 0},this.c = {x: 4,y: 1},this.d = {x: 5,y: 1};\n                this.colour = \"yellow\";\n                break;\n            case \"S\":\n                this.a = {x: 5,y: 0},this.b = {x: 6,y: 0},this.c = {x: 1,y: 4},this.d = {x: 1,y: 5};\n                this.colour = \"lime\";\n                break;\n            case \"T\":\n                var r = Math.floor(Math.random() * 2);\n                if (r === 0) {\n                this.a = {x: 3,y: 0},this.b = {x: 4,y: 0},this.c = {x: 5,y: 0},this.d = {x: 4,y: 1};\n                } else {\n                this.a = {x: 4,y: 0},this.b = {x: 5,y: 0},this.c = {x: 6,y: 0},this.d = {x: 5,y: 1};\n                }\n                this.colour = \"purple\";\n                break;\n            case \"Z\":\n                this.a = {x: 3,y: 0},this.b = {x: 4,y: 0},this.c = {x: 4,y: 1},this.d = {x: 5,y: 1};\n                this.colour = \"red\";\n                break;\n        }\n    }\n    \n    \n    is_blocked(direction) {\n        for (var i = 0; i < 4; i++) {\n            var x = this.blocks[i].x;\n            var y = this.blocks[i].y;\n            switch (direction) {\n                case \"left\":\n                    if (!map[x++][y] && x++ <= 10 && i == 4) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                case \"right\":\n                    if (!map[x--][y] && x-- >= 1 && i == 4) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                case \"down\":\n                    if (!map[x][y--] && y-- > 0 && i == 4) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n            }\n        }\n    }\n    \n    \n    move(direction) {\n        if (!this.is_blocked(direction)) {\n            for (var i = 0; i < 4; i++) {\n                switch (direction) {\n                    case \"left\":\n                        this.blocks[i].x--;\n                        break;\n                    case \"right\":\n                        this.blocks[i].x++;\n                        break;\n                    case \"down\":\n                        this.blocks[i].y--;\n                        break;\n                }\n            }\n        }\n    }\n}\n\n\nvar map = new Array(10);\n    for (var i = 0; i < 10; i++) {\n        map[i] = new Array(20);\n}\n\nvar score = 0;\n\nvar types = [\n    \"I\",\n    \"J\",\n    \"L\",\n    \"O\",\n    \"S\",\n    \"T\",\n    \"Z\"\n];\n\nvar blocks = [\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\"\n];\n\nvar next_tet = new Tetrimino;\nvar crnt_tet = next_tet\nvar next_tet = new Tetrimino;\n\nsetInterval(function() {                    \n    if (crnt_tet.is_blocked(\"down\")){\n        lock()\n        score += 4\n    } else {\n        crnt_tet.move(\"down\");\n        }}, 10);\n        \n        \nfunction lock() {\n    for (var i = 0; i < 4; i++) {\n        map[crnt_tet.blocks[i].x] = true;\n        map[crnt_tet.blocks[i].y] = true;\n    }\n    \n}\n        \n        \nfunction random_tetrimino() {\n    var r = Math.floor(Math.random() * 7);\n    return types[r];\n}","blocks[1]","var blocks = [\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\"\n];","crnt_tet.blocks[i].x","i = 3","class Tetrimino {\n    constructor(){\n        switch (random_tetrimino()) {\n            case \"I\":\n                this.a = {x: 3,y: 0},this.b = {x: 4,y: 0},this.c = {x: 5,y: 0},this.d = {x: 6,y: 0};\n                this.colour = \"cyan\";\n                break;\n            case \"J\":\n                this.a = {x: 4,y: 0},this.b = {x: 5,y: 0},this.c = {x: 6,y: 0},this.d = {x: 6,y: 1};\n                this.colour = \"blue\";\n                break;\n            case \"L\":\n                this.a = {x: 3,y: 0},this.b = {x: 4,y: 0},this.c = {x: 5,y: 0},this.d = {x: 1,y: 3};\n                this.colour = \"orange\";\n                break;\n            case \"O\":\n                this.a = {x: 4,y: 0},this.b = {x: 5,y: 0},this.c = {x: 4,y: 1},this.d = {x: 5,y: 1};\n                this.colour = \"yellow\";\n                break;\n            case \"S\":\n                this.a = {x: 5,y: 0},this.b = {x: 6,y: 0},this.c = {x: 1,y: 4},this.d = {x: 1,y: 5};\n                this.colour = \"lime\";\n                break;\n            case \"T\":\n                var r = Math.floor(Math.random() * 2);\n                if (r === 0) {\n                this.a = {x: 3,y: 0},this.b = {x: 4,y: 0},this.c = {x: 5,y: 0},this.d = {x: 4,y: 1};\n                } else {\n                this.a = {x: 4,y: 0},this.b = {x: 5,y: 0},this.c = {x: 6,y: 0},this.d = {x: 5,y: 1};\n                }\n                this.colour = \"purple\";\n                break;\n            case \"Z\":\n                this.a = {x: 3,y: 0},this.b = {x: 4,y: 0},this.c = {x: 4,y: 1},this.d = {x: 5,y: 1};\n                this.colour = \"red\";\n                break;\n        }\n    }\n    \n    \n    is_blocked(direction) {\n        for (var i = 1; i < 4; i++) {\n            var x = this.blocks[i].x;\n            var y = this.blocks[i].y;\n            switch (direction) {\n                case \"left\":\n                    if (!map[x++][y] && x++ <= 10 && i == 4) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                case \"right\":\n                    if (!map[x--][y] && x-- >= 1 && i == 4) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                case \"down\":\n                    if (!map[x][y--] && y-- > 0 && i == 4) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n            }\n        }\n    }\n    \n    \n    move(direction) {\n        if (!this.is_blocked(direction)) {\n            for (var i = 1; i < 4; i++) {\n                switch (direction) {\n                    case \"left\":\n                        this.blocks[i].x--;\n                        break;\n                    case \"right\":\n                        this.blocks[i].x++;\n                        break;\n                    case \"down\":\n                        this.blocks[i].y--;\n                        break;\n                }\n            }\n        }\n    }\n}\n\n\nvar map = new Array(10);\n    for (var i = 0; i < 10; i++) {\n        map[i] = new Array(20);\n}\n\nvar score = 0;\n\nvar types = {\n     0: \"I\",\n     1: \"J\",\n     2: \"L\",\n     3: \"O\",\n     4: \"S\",\n     5: \"T\",\n     6: \"Z\"\n};\n\nvar blocks = {\n    1: \"a\",\n    2: \"b\",\n    3: \"c\",\n    4: \"d\"\n};\n\nvar next_tet = new Tetrimino;\nvar crnt_tet = next_tet\nvar next_tet = new Tetrimino;\n\nsetInterval(function() {                    \n    if (crnt_tet.is_blocked(\"down\")){\n        lock()\n        score += 4\n    } else {\n        crnt_tet.move(\"down\");\n        }}, 10);\n        \n        \nfunction lock() {\n    for (var i = 1; i < 4; i++) {\n        map[crnt_tet.blocks[i].x] = true;\n        map[crnt_tet.blocks[i].y] = true;\n    }\n    \n}\n        \n        \nfunction random_tetrimino() {\n    var r = Math.floor(Math.random() * 7);\n    return types[r];\n}","blocks[i]","i = 3","var blocks = {\n    1: \"a\",\n    2: \"b\",\n    3: \"c\",\n    4: \"d\"\n};","class Tetrimino {\n    constructor(){\n        switch (random_tetrimino()) {\n            case \"I\":\n                this.a = {x: 3,y: 0},this.b = {x: 4,y: 0},this.c = {x: 5,y: 0},this.d = {x: 6,y: 0};\n                this.colour = \"cyan\";\n                break;\n            case \"J\":\n                this.a = {x: 4,y: 0},this.b = {x: 5,y: 0},this.c = {x: 6,y: 0},this.d = {x: 6,y: 1};\n                this.colour = \"blue\";\n                break;\n            case \"L\":\n                this.a = {x: 3,y: 0},this.b = {x: 4,y: 0},this.c = {x: 5,y: 0},this.d = {x: 1,y: 3};\n                this.colour = \"orange\";\n                break;\n            case \"O\":\n                this.a = {x: 4,y: 0},this.b = {x: 5,y: 0},this.c = {x: 4,y: 1},this.d = {x: 5,y: 1};\n                this.colour = \"yellow\";\n                break;\n            case \"S\":\n                this.a = {x: 5,y: 0},this.b = {x: 6,y: 0},this.c = {x: 1,y: 4},this.d = {x: 1,y: 5};\n                this.colour = \"lime\";\n                break;\n            case \"T\":\n                var r = Math.floor(Math.random() * 2);\n                if (r === 0) {\n                this.a = {x: 3,y: 0},this.b = {x: 4,y: 0},this.c = {x: 5,y: 0},this.d = {x: 4,y: 1};\n                } else {\n                this.a = {x: 4,y: 0},this.b = {x: 5,y: 0},this.c = {x: 6,y: 0},this.d = {x: 5,y: 1};\n                }\n                this.colour = \"purple\";\n                break;\n            case \"Z\":\n                this.a = {x: 3,y: 0},this.b = {x: 4,y: 0},this.c = {x: 4,y: 1},this.d = {x: 5,y: 1};\n                this.colour = \"red\";\n                break;\n        }\n    }\n}\nfunction random_tetrimino() {\n    var r = Math.floor(Math.random() * 7);\n        var types = {\n            0: \"I\",\n            1: \"J\",\n            2: \"L\",\n            3: \"O\",\n            4: \"S\",\n            5: \"T\",\n            6: \"Z\"\n        };\n    return types[r];\n}\n\nvar t = new Tetrimino\nconsole.log(t.colour)","class Tetrimino {\n    constructor(){\n        this.a = {\n             x: 0,\n             y: 0\n        },\n        this.b = {\n             x: 0,\n             y: 0\n        },\n         this.c = {\n             x: 0,\n             y: 0\n        },\n         this.d = {\n             x: 0,\n             y: 0\n        };\n        switch (random_tetrimino()) {\n            case \"I\":\n                init_tet(3, 0, 4, 0, 5, 0, 6, 0);\n                this.colour = \"cyan\";\n                break;\n            case \"J\":\n                init_tet(4, 0, 5, 0, 6, 0, 6, 1);\n                this.colour = \"blue\";\n                break;\n            case \"L\":\n                init_tet(3, 0, 4, 0, 5, 0, 1, 3);\n                this.colour = \"orange\";\n                break;\n            case \"O\":\n                init_tet(4, 0, 5, 0, 4, 1, 5, 1);\n                this.colour = \"yellow\";\n                break;\n            case \"S\":\n                init_tet(5, 0, 6, 0, 1, 4, 1, 5);\n                this.colour = \"lime\";\n                break;\n            case \"T\":\n                var r = Math.floor(Math.random() * 2);\n                if (r === 0) {\n                    init_tet(3, 0, 4, 0, 5, 0, 4, 1);\n                } else {\n                    init_tet(4, 0, 5, 0, 6, 0, 5, 1);\n                }\n                this.colour = \"purple\";\n                break;\n            case \"Z\":\n                init_tet(3, 0, 4, 0, 4, 1, 5, 1);\n                this.colour = \"red\";\n                break;\n        }\n    }\n}\nfunction random_tetrimino() {\n    var r = Math.floor(Math.random() * 7);\n        var types = {\n            0: \"I\",\n            1: \"J\",\n            2: \"L\",\n            3: \"O\",\n            4: \"S\",\n            5: \"T\",\n            6: \"Z\"\n        };\n    return types[r];\n}\nfunction init_tet(ax, ay, bx, by, cx, cy, dx, dy) {\n        this.a.x = ax;\n        this.a.y = ay;\n        this.b.x = bx;\n        this.b.y = by;\n        this.c.x = cx;\n        this.c.y = cy;\n        this.d.x = dx;\n        this.d.y = dy;\n}\n\nvar t = new Tetrimino\nconsole.log(t.colour)","class Tetrimino {\n    constructor(){\n        switch (random_tetrimino()) {\n            case \"I\":\n                init_tet(3, 0, 4, 0, 5, 0, 6, 0);\n                this.colour = \"cyan\";\n                break;\n            case \"J\":\n                init_tet(4, 0, 5, 0, 6, 0, 6, 1);\n                this.colour = \"blue\";\n                break;\n            case \"L\":\n                init_tet(3, 0, 4, 0, 5, 0, 1, 3);\n                this.colour = \"orange\";\n                break;\n            case \"O\":\n                init_tet(4, 0, 5, 0, 4, 1, 5, 1);\n                this.colour = \"yellow\";\n                break;\n            case \"S\":\n                init_tet(5, 0, 6, 0, 1, 4, 1, 5);\n                this.colour = \"lime\";\n                break;\n            case \"T\":\n                var r = Math.floor(Math.random() * 2);\n                if (r === 0) {\n                    init_tet(3, 0, 4, 0, 5, 0, 4, 1);\n                } else {\n                    init_tet(4, 0, 5, 0, 6, 0, 5, 1);\n                }\n                this.colour = \"purple\";\n                break;\n            case \"Z\":\n                init_tet(3, 0, 4, 0, 4, 1, 5, 1);\n                this.colour = \"red\";\n                break;\n        }\n    }\n}\nfunction random_tetrimino() {\n    var r = Math.floor(Math.random() * 7);\n        var types = {\n            0: \"I\",\n            1: \"J\",\n            2: \"L\",\n            3: \"O\",\n            4: \"S\",\n            5: \"T\",\n            6: \"Z\"\n        };\n    return types[r];\n}\nfunction init_tet(ax, ay, bx, by, cx, cy, dx, dy) {\n        this.a.x = ax;\n        this.a.y = ay;\n        this.b.x = bx;\n        this.b.y = by;\n        this.c.x = cx;\n        this.c.y = cy;\n        this.d.x = dx;\n        this.d.y = dy;\n}\n\nvar t = new Tetrimino\nconsole.log(t.colour)","random_tetrimino()","function random_tetrimino() {\n    var r = Math.floor(Math.random() * 7);\n        var types = {\n            0: \"I\",\n            1: \"J\",\n            2: \"L\",\n            3: \"O\",\n            4: \"S\",\n            5: \"T\",\n            6: \"Z\"\n        };\n    return types[r];\n}","random_tetrimino()","function random_tetrimino() {\n    var r = Math.floor(Math.random() * 7);\n        console.log(r)\n        var types = {\n            0: \"I\",\n            1: \"J\",\n            2: \"L\",\n            3: \"O\",\n            4: \"S\",\n            5: \"T\",\n            6: \"Z\"\n        };\n    return types[r];\n}","types[r]","    var r = Math.floor(Math.random() * 7);\n        console.log(r)\n        var types = {\n            0: \"I\",\n            1: \"J\",\n            2: \"L\",\n            3: \"O\",\n            4: \"S\",\n            5: \"T\",\n            6: \"Z\"\n        };","    var r = Math.floor(Math.random() * 7);\n        console.log(r)\n        var types = {\n            0: \"I\",\n            1: \"J\",\n            2: \"L\",\n            3: \"O\",\n            4: \"S\",\n            5: \"T\",\n            6: \"Z\"\n        };\n    return types[r];","    var r = Math.floor(Math.random() * 7);\n        console.log(r)","Math.floor(Math.random() * 7)","console.log(Math.floor(Math.random() * 7))","    for(var x = 0; x > 10; i++){\n        for( var y = 0; y > 20; y++){\n            if(map[x][y] == true){\n                console.log(x & y & \"true\")\n            }\n        }\n    }","    map[7][3] = \"blue\";","    var map = new Array(10);\n    for (var i = 0; i < 10; i++) {\n        map[i] = new Array(20);\n        }"],"pos":-1},"timestamp":1426421214519,"hash":"bc37e9908b413249fe666f189265c03143e4d841"}